<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Caesar Cipher Wheel</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            height: 100%;
            overflow: hidden;
            color: #ffffff;
        }
        .container {
            display: flex;
            height: 100%;
        }
        .wheel-container {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }
        #wheel {
            width: 80vmin;
            height: 80vmin;
            position: relative;
            animation: pulse 4s infinite alternate;
        }
        @keyframes pulse {
            0% { transform: scale(1); }
            100% { transform: scale(1.05); }
        }
        .controls {
            width: 350px;
            padding: 40px;
            background-color: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(20px);
            display: flex;
            flex-direction: column;
            justify-content: center;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        }
        .letter {
            position: absolute;
            width: 40px;
            height: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        .outer-letter {
            color: #ffffff;
            font-size: 24px;
        }
        .inner-letter {
            color: #ffd700;
            font-size: 20px;
        }
        .inner-wheel {
            position: absolute;
            width: 100%;
            height: 100%;
            transition: transform 0.3s ease-in-out;
        }
        .pin {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            background-color: #ffd700;
            border-radius: 50%;
            box-shadow: 0 0 15px rgba(255, 215, 0, 0.8);
        }
        .grid-line {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 50%;
            height: 1px;
            background-color: rgba(255, 255, 255, 0.2);
            transform-origin: left center;
        }
        input[type="text"] {
            width: 100%;
            padding: 12px;
            margin: 10px 0;
            box-sizing: border-box;
            border: none;
            border-radius: 25px;
            background-color: rgba(255, 255, 255, 0.2);
            color: #ffffff;
            font-size: 16px;
        }
        input[type="range"] {
            width: 100%;
            margin: 20px 0;
            -webkit-appearance: none;
            background: transparent;
        }
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 20px;
            width: 20px;
            border-radius: 50%;
            background: #ffd700;
            cursor: pointer;
            margin-top: -8px;
        }
        input[type="range"]::-webkit-slider-runnable-track {
            width: 100%;
            height: 4px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 2px;
        }
        button {
            background-color: #ffd700;
            color: #333333;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            margin-top: 20px;
            transition: all 0.3s ease;
        }
        button:hover {
            background-color: #ffec8b;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        #result {
            margin-top: 30px;
            font-weight: bold;
            word-wrap: break-word;
            background-color: rgba(255, 255, 255, 0.1);
            padding: 15px;
            border-radius: 10px;
        }
        h1 {
            margin-top: 0;
            color: #ffffff;
            font-size: 32px;
            text-align: center;
            margin-bottom: 30px;
        }
        .button-group {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            .wheel-container {
                height: 60%;
            }
            .controls {
                width: 100%;
                height: 40%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="wheel-container">
            <div id="wheel">
                <div class="inner-wheel"></div>
            </div>
        </div>
        <div class="controls">
            <h1>Caesar Cipher Wheel</h1>
            <input type="text" id="input-text" placeholder="Enter your message..." aria-label="Enter your message">
            <input type="range" id="shift-slider" min="0" max="25" value="0" aria-label="Shift value">
            <div>Shift: <span id="shift-value">0</span></div>
            <div class="button-group">
                <button onclick="encrypt()">Encrypt</button>
                <button onclick="decrypt()">Decrypt</button>
            </div>
            <div id="result" aria-live="polite"></div>
        </div>
    </div>

    <script>
        const outerAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        const innerAlphabet = 'abcdefghijklmnopqrstuvwxyz';
        const wheel = document.getElementById('wheel');
        const innerWheel = document.querySelector('.inner-wheel');
        const shiftSlider = document.getElementById('shift-slider');
        const shiftValue = document.getElementById('shift-value');
        const inputText = document.getElementById('input-text');
        const result = document.getElementById('result');

        function createWheel() {
            const wheelRadius = wheel.offsetWidth / 2;
            const outerLetterRadius = wheelRadius * 0.85;
            const innerLetterRadius = wheelRadius * 0.6;
            const totalLetters = outerAlphabet.length;
            const angleStep = 360 / totalLetters;

            for (let i = 0; i < totalLetters; i++) {
                const angle = i * angleStep;
                const outerX = wheelRadius + outerLetterRadius * Math.cos(angle * Math.PI / 180) - 20;
                const outerY = wheelRadius + outerLetterRadius * Math.sin(angle * Math.PI / 180) - 20;
                const innerX = wheelRadius + innerLetterRadius * Math.cos(angle * Math.PI / 180) - 20;
                const innerY = wheelRadius + innerLetterRadius * Math.sin(angle * Math.PI / 180) - 20;

                const outerLetter = createLetter(outerAlphabet[i], 'outer-letter', outerX, outerY, angle);
                const innerLetter = createLetter(innerAlphabet[i], 'inner-letter', innerX, innerY, angle);

                wheel.appendChild(outerLetter);
                innerWheel.appendChild(innerLetter);

                const gridLine = document.createElement('div');
                gridLine.className = 'grid-line';
                gridLine.style.transform = `rotate(${angle}deg)`;
                wheel.appendChild(gridLine);
            }

            const pin = document.createElement('div');
            pin.className = 'pin';
            wheel.appendChild(pin);
        }

        function createLetter(text, className, x, y, angle) {
            const letter = document.createElement('div');
            letter.className = `letter ${className}`;
            letter.innerText = text;
            letter.style.left = `${x}px`;
            letter.style.top = `${y}px`;
            letter.style.transform = `rotate(${angle}deg)`;
            return letter;
        }

        function handleShiftChange() {
            const shift = parseInt(shiftSlider.value);
            shiftValue.textContent = shift;
            innerWheel.style.transform = `rotate(${shift * 13.85}deg)`;
        }

        function caesarCipher(text, shift, encrypt = true) {
            return text.split('').map(char => {
                const alphabet = char === char.toUpperCase() ? outerAlphabet : innerAlphabet;
                if (alphabet.includes(char)) {
                    let newIndex;
                    if (encrypt) {
                        newIndex = (alphabet.indexOf(char) + shift) % 26;
                    } else {
                        newIndex = (alphabet.indexOf(char) - shift + 26) % 26;
                    }
                    return alphabet[newIndex];
                }
                return char;
            }).join('');
        }

        function encrypt() {
            const text = inputText.value;
            const shift = parseInt(shiftSlider.value);
            const encryptedText = caesarCipher(text, shift, true);
            result.textContent = `Encrypted Text: ${encryptedText}`;
        }

        function decrypt() {
            const text = inputText.value;
            const shift = parseInt(shiftSlider.value);
            const decryptedText = caesarCipher(text, shift, false);
            result.textContent = `Decrypted Text: ${decryptedText}`;
        }

        createWheel();
        shiftSlider.addEventListener('input', handleShiftChange);

        window.addEventListener('resize', () => {
            wheel.innerHTML = '<div class="inner-wheel"></div>';
            createWheel();
            handleShiftChange();
        });
    </script>
</body>
</html>
